#!/bin/bash
DOTFILLER_HOME="${HOME}/.DOTFILLER"
OVERWRITES_FILE="${DOTFILLER_HOME}/overwrites"
ALLKNOWNFILES_FILE="${DOTFILLER_HOME}/allknown"
INTERACTIVE=${INTERACTIVE:-0}
DOTFILLER_LINK_DIR_CONFIG="${DOTFILLER_HOME}/link_dir"

exec > >(ts '[%Y-%m-%d %H:%M:%S]' | tee "${DOTFILLER_HOME}/logs/link.log") 2>&1

function in_array() {
    local needle="$1" item
    local -n arrref="$2"
    for item in "${arrref[@]}"; do
        [[ "${item}" == "${needle}" ]] && return 0
    done
    return 1
}

function shouldWeLink() {
    file=${1}
    # Add every file we find to the allknown file for later cleanup of symlinks we made
    grep -qxF "${file}" "$ALLKNOWNFILES_FILE" > /dev/null 2>&1 || echo "${file}" >> "$ALLKNOWNFILES_FILE"
    declare -a overwrites
    if [ -f "$OVERWRITES_FILE" ]; then readarray -t overwrites < "$OVERWRITES_FILE"; fi
    if in_array "$file" "overwrites"; then return 0; fi
    if [ ! -z "$overwrite_all" ]; then
        echo "Adding $file to $OVERWRITES_FILE"
        echo "$file" >> "$OVERWRITES_FILE"
        return 0
    fi
    if [ ! -f "$file" ]; then return 0; fi

    if [ "$INTERACTIVE" -gt 0 ]; then
        read -p "Overwrite $file ([Y]es/[N]o/[A]lways for this file/always for [E]very file)? " -n 1 -r overwriteResponse
        echo
        if [[ "$overwriteResponse" =~ ^[Yy]$ ]]; then return 0; fi
        if [[ "$overwriteResponse" =~ ^[Aa]$ ]]; then
            echo "Adding $file to $OVERWRITES_FILE"
            echo "$file" >> "$OVERWRITES_FILE"
            return 0
        fi
        if [[ "$overwriteResponse" =~ ^[Ee]$ ]]; then
            overwrite_all=1
            echo "Adding $file to $OVERWRITES_FILE"
            echo "$file" >> "$OVERWRITES_FILE"
            return 0
        fi
    else
        echo "Non-interactive mode & $file does not appear in $OVERWRITES_FILE, so we are not overwriting. Run \"INTERACTIVE=1;$0\" to interactively add overwrites."
    fi
    return 1
}

function traverseLink() {
    dir=${1%\/}
    shopt -s dotglob
    for file in "$dir"/*; do
        fileHome="${HOME}${file#"$DROPBOX_DIR"}"
        if shouldWeLink "$fileHome"; then
            echo ln -sf "$file" "$fileHome"
        else
            echo "Skipping $fileHome"
        fi
    done
}

function cleanLinks() {
    dir=${1:-$HOME}
    if [ -f "$ALLKNOWNFILES_FILE" ]; then 
        cat "$ALLKNOWNFILES_FILE" | while read -r line; do
            if [ -h "$line" -a ! -e "$line" ]; then
                unlink "$line"
            fi
        done
    fi
}

function run_unattended() {
    cleanLinks
    rm "$ALLKNOWNFILES_FILE"
    traverseLink "$(cat "$DOTFILLER_LINK_DIR_CONFIG")"
}

function run_interactive() {
    cleanLinks
    rm "$ALLKNOWNFILES_FILE"
    arg=${1:-"$(cat "$DOTFILLER_LINK_DIR_CONFIG")"}
    INTERACTIVE=1 traverseLink "$arg"
}